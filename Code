// C++ code
void setup()
{
  pinMode(13, INPUT);
  pinMode(12, INPUT);
  pinMode(11, INPUT);
  pinMode(10, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(2, OUTPUT);
  pinMode(A3, INPUT);
  pinMode(A4, INPUT);
  pinMode(A5, INPUT);
  
  randomSeed(analogRead(A0));
}

int j, i, k, h, d, a, e;
int colourIndex = -1;
int colourFound = 0;
int matchNum = 0;
int x = 0;
int y = 0;
int colours[] = {8, 9, 10};
int leds[6];
int ledsPos[] = {0, 1, 2, 3, 4, 5};
int coloursChosen[3];
int colourX[6];

// Lights up the LED associated with the button pressed by the player
void playerInput(int a) {
  if (ledsPos[a] == 0 || ledsPos[a] == 1) {
    digitalWrite(colours[0], 1);
    delay(1000);
    digitalWrite(colours[0], 0);
  }
  if (ledsPos[a] == 2 || ledsPos[a] == 3) {
    digitalWrite(colours[1], 1);
    delay(1000);
    digitalWrite(colours[1], 0);
  }
  if (ledsPos[a] == 4 || ledsPos[a] == 5) {
    digitalWrite(colours[2], 1);
    delay(1000);
    digitalWrite(colours[2], 0);
  }
}

void loop() { 
  // Randomizes the order of the colours
  if (digitalRead(A2) == 1) {
    e = 1;
    const int questionCountColours = sizeof colours / sizeof colours[0];
    for (int j = 0; j < questionCountColours; j++) {
      long x = random(0, questionCountColours);
      int tempC = colours[x];
      colours[x] = colours[j];
      colours[j] = tempC;
    }
    
    colourX[0] = colours[0];
    colourX[1] = colours[0];
    colourX[2] = colours[1];
    colourX[3] = colours[1];
    colourX[4] = colours[2];
    colourX[5] = colours[2];
    
    // Randomizes the order of the LEDs that display the colours
    const int questionCountLeds = sizeof ledsPos / sizeof ledsPos[0];
    for (int i = 0; i < questionCountLeds; i++) {
      long n = random(0, questionCountLeds);
      int tempL = ledsPos[n];
      ledsPos[n] = ledsPos[i];
      ledsPos[i] = tempL;
    }
    
    leds[ledsPos[0]] = 2;
    leds[ledsPos[1]] = 3;
    leds[ledsPos[2]] = 4;
    leds[ledsPos[3]] = 5;
    leds[ledsPos[4]] = 6;
    leds[ledsPos[5]] = 7;
    
    for (int k = 0; k < 200; k++){
      
      // Displays the first colour pair
      digitalWrite(leds[0], 0);
      digitalWrite(leds[1], 1);
      digitalWrite(leds[2], 1);
      digitalWrite(leds[3], 1);
      digitalWrite(leds[4], 1);
      digitalWrite(leds[5], 1);
      
      if (colours[0] == 8 || colours[0] == 9 || colours[0] == 10){
        digitalWrite(colours[0], 1);
        delay(2);
      }
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      digitalWrite(10, 0);
  
      digitalWrite(leds[0], 1);
      digitalWrite(leds[1], 0);
      digitalWrite(leds[2], 1);
      digitalWrite(leds[3], 1);
      digitalWrite(leds[4], 1);
      digitalWrite(leds[5], 1);
      digitalWrite(colours[0], 1);
  
      if (colours[0] == 8 || colours[0] == 9 || colours[0] == 10){
        digitalWrite(colours[0], 1);
        delay(2);
      }
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      digitalWrite(10, 0);
  
      // Displays the second colour pair
      digitalWrite(leds[0], 1);
      digitalWrite(leds[1], 1);
      digitalWrite(leds[2], 0);
      digitalWrite(leds[3], 1);
      digitalWrite(leds[4], 1);
      digitalWrite(leds[5], 1);
  
      if (colours[1] == 8 || colours[1] == 9 || colours[1] == 10){
        digitalWrite(colours[1], 1);
        delay(2);
      }
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      digitalWrite(10, 0);
  
      digitalWrite(leds[0], 1);
      digitalWrite(leds[1], 1);
      digitalWrite(leds[2], 1);
      digitalWrite(leds[3], 0);
      digitalWrite(leds[4], 1);
      digitalWrite(leds[5], 1);
      digitalWrite(colours[1], 1);
  
      if (colours[1] == 8 || colours[1] == 9 || colours[1] == 10){
        digitalWrite(colours[1], 1);
        delay(2);
      }
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      digitalWrite(10, 0);
  
      // Displays the third colour pair
      digitalWrite(leds[0], 1);
      digitalWrite(leds[1], 1);
      digitalWrite(leds[2], 1);
      digitalWrite(leds[3], 1);
      digitalWrite(leds[4], 0);
      digitalWrite(leds[5], 1);
      digitalWrite(colours[2], 1);
  
      if (colours[2] == 8 || colours[2] == 9 || colours[2] == 10){
        digitalWrite(colours[2], 1);
        delay(2);
      }
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      digitalWrite(10, 0);
  
      digitalWrite(leds[0], 1);
      digitalWrite(leds[1], 1);
      digitalWrite(leds[2], 1);
      digitalWrite(leds[3], 1);
      digitalWrite(leds[4], 1);
      digitalWrite(leds[5], 0);
      digitalWrite(colours[2], 1);
      
      if (colours[2] == 8 || colours[2] == 9 || colours[2] == 10){
        digitalWrite(colours[2], 1);
        delay(2);
      }
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      digitalWrite(10, 0);
    }
  }
  
  // Player's input 
  if (digitalRead(13) == 1) {
    digitalWrite(7, 0);
    digitalWrite(6, 1);
    digitalWrite(5, 1);
    digitalWrite(4, 1);
    digitalWrite(3, 1);
    digitalWrite(2, 1);
    
    playerInput(5);
    colourIndex = 5;
  }
  
  if (digitalRead(12) == 1) {
    digitalWrite(7, 1);
    digitalWrite(6, 0);
    digitalWrite(5, 1);
    digitalWrite(4, 1);
    digitalWrite(3, 1);
    digitalWrite(2, 1);
    
    playerInput(4);
    colourIndex = 4;
  }
  
  if (digitalRead(11) == 1) {
    digitalWrite(7, 1);
    digitalWrite(6, 1);
    digitalWrite(5, 0);
    digitalWrite(4, 1);
    digitalWrite(3, 1);
    digitalWrite(2, 1);
  
    playerInput(3);
    colourIndex = 3;
  }
  
  if (digitalRead(A3) == 1) {
    digitalWrite(7, 1);
    digitalWrite(6, 1
